if(QXT_INCLUDE_DIR AND QXT_LIBRARIES)
	set(QXT_FIND_QUIETLY TRUE)
endif(QXT_INCLUDE_DIR AND QXT_LIBRARIES)

find_library(QXT_CORE_LIBRARY QxtCore${BICYCLE_DEBUG_POSTFIX}
	PATHS ${PROJECT_BASE_DIR}/redist/QXT/${FULL_QT_VERSION}/lib_${SPEC})

find_library(QXT_NETWORK_LIBRARY QxtNetwork${BICYCLE_DEBUG_POSTFIX}
	PATHS ${PROJECT_BASE_DIR}/redist/QXT/${FULL_QT_VERSION}/lib_${SPEC})

if (QXT_CORE_LIBRARY AND QXT_NETWORK_LIBRARY)
	set(QXT_LIBRARIES ${QXT_CORE_LIBRARY} ${QXT_NETWORK_LIBRARY})
endif ()

find_path(QXT_INCLUDE_DIR QxtCore/QxtCore
	PATHS ${PROJECT_BASE_DIR}/redist/QXT/${FULL_QT_VERSION}/include)

find_path(QXT_CORE_INCLUDE_DIR QxtCore
	PATH_SUFFIXES QxtCore
	PATHS ${PROJECT_BASE_DIR}/redist/QXT/${FULL_QT_VERSION}/include)

find_path(QXT_NETWORK_INCLUDE_DIR QxtNetwork
	PATH_SUFFIXES QxtNetwork
	PATHS ${PROJECT_BASE_DIR}/redist/QXT/${FULL_QT_VERSION}/include)

if(QXT_CORE_INCLUDE_DIR AND QXT_NETWORK_INCLUDE_DIR)
	set (QXT_INCLUDE_DIR ${QXT_INCLUDE_DIR} ${QXT_CORE_INCLUDE_DIR} ${QXT_NETWORK_INCLUDE_DIR})
endif()

if(WIN32)
set(QXT_LIBRARIES ${QXT_LIBRARIES} -lws2_32)
endif()

INCLUDE(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(Qxt DEFAULT_MSG QXT_LIBRARIES QXT_INCLUDE_DIR)

MARK_AS_ADVANCED(
	QXT_INCLUDE_DIR
	QXT_LIBRARIES
)
