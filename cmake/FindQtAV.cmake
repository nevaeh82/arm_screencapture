# - Try to find the QtAV library
#
# Once done this will define
#
#  QTAV_FOUND        - system has libqtav
#  QTAV_INCLUDE_DIRS - the libqtav include directory
#  QTAV_LIBRARIES    - Link these to use libqtav

find_package(Qt5 QUIET REQUIRED NO_MODULE COMPONENTS Core)

get_target_property(qmake Qt5::qmake LOCATION)

find_path(QTAV_INCLUDE_DIR NAMES QtAV.h
	PATHS ${PROJECT_BASE_DIR}/redist/QtAV/${FULL_QT_VERSION}/include
    PATH_SUFFIXES QtAV
)

if (CMAKE_BUILD_TYPEUP STREQUAL DEBUG)
	set(QTAV_PATH_SUFFIX "Debug")
else()
	set(QTAV_PATH_SUFFIX "Release")
endif()

find_library(QTAV_LIBRARY NAMES QtAV${BICYCLE_DEBUG_POSTFIX}1
	PATHS ${PROJECT_BASE_DIR}/redist/QtAV/${FULL_QT_VERSION}/lib_${SPEC}/${QTAV_PATH_SUFFIX}
)

find_path(QTAVWIDGETS_INCLUDE_DIR NAMES QtAVWidgets.h
	PATHS ${PROJECT_BASE_DIR}/redist/QtAV/${FULL_QT_VERSION}/include
    PATH_SUFFIXES QtAVWidgets
)

find_library(QTAVWIDGETS_LIBRARY NAMES QtAVWidgets${BICYCLE_DEBUG_POSTFIX}1
	PATHS ${PROJECT_BASE_DIR}/redist/QtAV/${FULL_QT_VERSION}/lib_${SPEC}/${QTAV_PATH_SUFFIX}
)

set(QTAV_INCLUDE_DIRS ${QTAV_INCLUDE_DIR} ${QTAV_INCLUDE_DIR}/..)
set(QTAV_LIBRARIES ${QTAV_LIBRARY})
if(NOT QTAVWIDGETS_INCLUDE_DIR MATCHES "QTAVWIDGETS_INCLUDE_DIR-NOTFOUND")
	set(QTAVWIDGETS_INCLUDE_DIRS ${QTAVWIDGETS_INCLUDE_DIR} ${QTAV_INCLUDE_DIRS})
endif()
if(NOT QTAV_LIBRARIES MATCHES "QTAV_LIBRARIES-NOTFOUND")
    set(QTAVWIDGETS_LIBRARIES ${QTAVWIDGETS_LIBRARY} ${QTAV_LIBRARY})
endif()

find_package(PackageHandleStandardArgs REQUIRED)
find_package_handle_standard_args(QtAV REQUIRED_VARS QTAV_LIBRARIES QTAV_INCLUDE_DIRS)
mark_as_advanced(QTAV_INCLUDE_DIRS QTAV_LIBRARIES QTAVWIDGETS_INCLUDE_DIRS QTAVWIDGETS_LIBRARIES)
